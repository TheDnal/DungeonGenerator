=====================================================
mark scheme : 50% theory 37.5% practical 12.5% poster
=====================================================

05/04/23
Initial project set up and connected to github repo
- Basic tile script added
    - stores its position, its state and corresponding object
    - Can change color
- Basic tilegrid script added
    - Controls the basics of the grid
    - Can spawn a grid of any size
    - Aligns the grid to the centre of the screen

06/04/23
Can now add rooms by pressing spacebar
-work beginning on BSP
-Basic BSP finished
    - BSP only partitions perfect 50/50's, i.e. straight down the middle
    - BSP partitions randomly either horizontally or vertically


03/05/23
Long hiatus due to group project
- Reset the project for a clean start 
- Project will be split into different sections : 
    - grid generation (deciding tile shape, size etc)
    - grid terrain (holes, chasms etc that decide where structres can generate)
    - Room distribution (how are rooms spread out? randomly? BSP's ? room accretion etc)
    - Room shape 
    - Room details (machines, etc)

04/05/23
Basic grid generation implemented
    - Only square tiles so far
Basic Camera controls added
    - Can move up and down with Q and E 

09/05/23
Grid can now generate hexagonal lattices alongside original square lattices
    - Tiles now store their position on the grid and can get their neighbour tiles (works for hex grid)
    - For testing purposes, tiles can be clicked which will highlight them and their neigbour tiles
    - Next will be to work on grid terrain, adding noise to simulate terrain such as hills, holes, chasms etc

11/05/23
Grid can now generate some noise
    - Perlin noise with some controllable values
    - Random nosie

14/05/23
UI framework now implemented
    - UI Has a main menu thats split into differnet sub-menus
        - Grid generation
        - terrain
        - Room distribution
        - Room shape
        - details
        - Misc
        - Help
This will allow direct access to the program rather than changing values in the inspector

15/05/23
UI framework significently updated
    - Grid generation and terrain generation can now be directly edited from the UI.
        - Grid generation can have its shape and dimensions edited
Grid Terrain Mostly implemented, which can be fully controlled from the UI;
    - Perlin noise
        - Scale of the noise
        - threshold value required to turn a tile into terrain
        - offset vector2 to move around the noise freely
        - Seed UI implemented but seed not functional as of yet
    - Voronoi noise
        - Fully implemented seed
        - Radius ; the radius of tiles surrounding a voronoi point that become terrain
        - Density ; the amount of voronoi points on the grid
        - offset vector2 to move around the noise freely
    - Random noise
        - randomly picks a number between 1 and 100 for each tile which decides if its terrain
        - fully implemented seed
        - threshold that decides how high the number needs to be to become terrain (effectively a perctange)
As terrain is mostly completed, work will now move onto room distribution.
Known bugs :
    - Hex grid does not interact correctly with voronoi distance calculations.
        - the grid script should control calculations for distances between nodes

16/05/23
Basic room placement
    - Rooms can now be generated onto blank tiles. This can use 3 different techniques
        - Accretion (not implemented)
        - Binary space partitioning (not implemented)
        - Random placement (Implemented)
    - Hex tiles now have the correct hexagonal-prism model

18/05/23
Colors updated
    - Simplified color schemes to make generation more obvious
        - Terrain now makes tiles invisble
        - Rooms are white
    - Fixed spacing for tiles, as the square and hexagonal tiles had slightly different measurements. This caused seams to appear.